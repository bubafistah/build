include:
  - template: Auto-DevOps.gitlab-ci.yml
  - local: 'build-conf/**/*.yml'

test:
  image: python:3.8-buster
  before_script:
    - pip install -r requirements.txt
  stage: test
  script:
  - mkdocs build --strict --verbose --site-dir test
  artifacts:
    paths:
    - test

pages:
  image: python:3.8-buster
  before_script:
    - pip install -r requirements.txt
    - pip install git+https://$protected_material_token@github.com/squidfunk/mkdocs-material-insiders.git
  stage: deploy
  script:
    - mkdocs build --strict --verbose
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - docs/*

build:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE -f build-conf/build.Dockerfile src
    - docker push $CI_REGISTRY_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - changes:
        - build-conf/build.Dockerfile
        - src/*

build.deploy:
  stage: deploy
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull -a $CI_REGISTRY_IMAGE
    - docker tag $CI_REGISTRY_IMAGE:latest $DOCKER_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:chain-linux $DOCKER_REGISTRY_IMAGE:chain-linux
    - docker tag $CI_REGISTRY_IMAGE $DOCKER_REGISTRY_IMAGE
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
    - docker push -a $DOCKER_REGISTRY_IMAGE
  environment:
    name: docker.io
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - build-conf/*
        - src/*

