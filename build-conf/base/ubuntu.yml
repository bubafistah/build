include:
  - local: 'build-conf/base/ubuntu/*.yml'

base-ubuntu.build:
  stage: build
  image: docker
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  allow_failure: true
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --squash --cache-from $CI_REGISTRY_IMAGE:base-ubuntu -t $CI_REGISTRY_IMAGE:base-ubuntu -f build-conf/base/ubuntu/20-04.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:base-ubuntu"
  rules:
    - changes:
        - build-conf/base/ubuntu/20-04.Dockerfile
        - build-conf/base/ubuntu.yml

base-ubuntu.deploy:
  stage: deploy
  needs: ["base-ubuntu.build"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:base-ubuntu
    - docker tag $CI_REGISTRY_IMAGE:base-ubuntu $DOCKER_REGISTRY_IMAGE:base-ubuntu
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_IMAGE:base-ubuntu
  environment:
    name: base-ubuntu
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - build-conf/base/ubuntu/20-04.Dockerfile
        - build-conf/base/ubuntu.yml
