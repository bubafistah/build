chain.linux.build:
  stage: build
  image: docker
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  allow_failure: true
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:chain-linux -f build-conf/chain/linux.Dockerfile src
    - docker push "$CI_REGISTRY_IMAGE:chain-linux"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - changes:
        - build-conf/chain/linux.Dockerfile

chain.linux.deploy:
  stage: deploy
  image: docker
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  allow_failure: true
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --squash -t lthn/build:chain-linux -f build-conf/chain/linux.Dockerfile src
    - docker push "lthn/build:chain-linux"
  environment:
    name: docker.io
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      changes:
        - build-conf/chain/linux.Dockerfile
    - if: $CI_COMMIT_BRANCH == 'master'
