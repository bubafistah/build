compile-base:build:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    IMG_TAG: compile
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$IMG_TAG" || true
    - docker build --squash --cache-from $CI_REGISTRY_IMAGE:$IMG_TAG -t $CI_REGISTRY_IMAGE:$IMG_TAG -f build-conf/compile/base.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:$IMG_TAG"
  rules:
    - changes:
        - build-conf/compile/base.Dockerfile

compile:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  parallel:
    matrix:
      - BUILD: x86_64-unknown-linux-gnu
        TAG: linux-64
      - BUILD: i686-pc-linux-gnu
        TAG: linux-32
      - BUILD: arm-linux-gnueabihf
        TAG: arm-7
      - BUILD: aarch64-linux-gnu
        TAG: arm-8
      - BUILD: x86_64-w64-mingw32
        TAG: windows-64
      - BUILD: i686-w64-mingw32
        TAG: windows-32
      - BUILD: riscv64-linux-gnu
        TAG: riscv-64
      - BUILD: x86_64-unknown-freebsd
        TAG: freebsd-64
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker push "$CI_REGISTRY_IMAGE:$TAG" || true
    - docker build --squash --build-arg BUILD=$BUILD --target build --cache-from $CI_REGISTRY_IMAGE:$TAG -t $CI_REGISTRY_IMAGE:$TAG -f build-conf/compile/depends.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:$TAG"
  rules:
    - changes:
        - build-conf/compile/depends.Dockerfile

compile:deploy:
  stage: deploy
  needs: ["compile"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  parallel:
    matrix:
      - TARGET: linux-64
      - TARGET: linux-32
      - TARGET: arm-7
      - TARGET: arm-8
      - TARGET: windows-64
      - TARGET: windows-32
      - TARGET: riscv-64
      - TARGET: freebsd-64
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TARGET || true
    - docker tag $CI_REGISTRY_IMAGE:$TARGET $DOCKER_REGISTRY/lthn/build:$TARGET
    - docker push $DOCKER_REGISTRY/lthn/build:$TARGET
  environment:
    name: $TARGET
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      changes:
        - build-conf/compile/depends.Dockerfile

depends:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    OSX_SDK: 10:11
  parallel:
    matrix:
      - BUILD: x86_64-unknown-linux-gnu
      - BUILD: i686-pc-linux-gnu
      - BUILD: arm-linux-gnueabihf
      - BUILD: aarch64-linux-gnu
      - BUILD: x86_64-w64-mingw32
      - BUILD: i686-w64-mingw32
      - BUILD: riscv64-linux-gnu
      - BUILD: x86_64-unknown-freebsd
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:depends-$BUILD" || true
    - docker build --squash --build-arg BUILD=$BUILD --cache-from $CI_REGISTRY_IMAGE:depends-$BUILD -t $CI_REGISTRY_IMAGE:depends-$BUILD -f build-conf/compile/depends.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:depends-$BUILD"
  rules:
    - changes:
        - build-conf/compile/depends.Dockerfile

depends:deploy:
  stage: deploy
  needs: ["depends"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  parallel:
    matrix:
      - TARGET: compile
      - TARGET: depends-x86_64-unknown-linux-gnu
      - TARGET: depends-x86_64-unknown-freebsd
      - TARGET: depends-i686-pc-linux-gnu
      - TARGET: depends-x86_64-w64-mingw32
      - TARGET: depends-i686-w64-mingw32
      - TARGET: depends-arm-linux-gnueabihf
      - TARGET: depends-aarch64-linux-gnu
      - TARGET: depends-riscv64-linux-gnu
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TARGET || true
    - docker tag $CI_REGISTRY_IMAGE:$TARGET $DOCKER_REGISTRY/lthn/build:$TARGET
    - docker push $DOCKER_REGISTRY/lthn/build:$TARGET
  environment:
    name: $IMG_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      changes:
        - build-conf/compile/depends.Dockerfile

sources:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  parallel:
    matrix:
      - BUILD: osx
      - BUILD: linux
      - BUILD: win
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - sleep $(shuf -i1-180 -n1);
  script:
    - docker pull "$CI_REGISTRY_IMAGE:sources-$BUILD" || true
    - docker build --squash --build-arg BUILD=$BUILD -t $CI_REGISTRY_IMAGE:sources-$BUILD -f build-conf/compile/sources.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:sources-$BUILD"
  rules:
    - changes:
        - build-conf/compile/sources.Dockerfile

sources:deploy:
  stage: deploy
  needs: ["sources"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  parallel:
    matrix:
      - TARGET: sources-osx
      - TARGET: sources-linux
      - TARGET: sources-win
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TARGET || true
    - docker tag $CI_REGISTRY_IMAGE:$TARGET $DOCKER_REGISTRY/lthn/build:$TARGET
    - docker push $DOCKER_REGISTRY/lthn/build:$TARGET
  environment:
    name: $IMG_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      changes:
          - build-conf/compile/sources.Dockerfile