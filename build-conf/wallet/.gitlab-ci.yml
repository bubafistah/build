wallet:preload:
  stage: prep
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  parallel:
    matrix:
      - BUILD: linux
      - BUILD: windows
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:wallet-$BUILD-base" || true
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $CI_REGISTRY_IMAGE:wallet-$BUILD-base -t $CI_REGISTRY_IMAGE:wallet-$BUILD-base -f build-conf/wallet/$BUILD/base.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:wallet-$BUILD-base"

wallet:libs:
  stage: libs
  image: docker
  needs: ["wallet:preload"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  parallel:
    matrix:
      - BUILD: linux
        LIB: [libx, utils, cmake, boost, fontconfig]
      - BUILD: windows
        LIB: [libx, cmake]
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:wallet-lib-$BUILD-$LIB" || true
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg IMG_PREFIX=registry.gitlab.com/lthn.io/projects/sdk --cache-from $CI_REGISTRY_IMAGE:wallet-lib-$BUILD-$LIB -t $CI_REGISTRY_IMAGE:wallet-lib-$BUILD-$LIB -f build-conf/wallet/$BUILD/$LIB.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:wallet-lib-$BUILD-$LIB"


wallet:
  stage: build
  image: docker
  needs: ["wallet:libs"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  parallel:
    matrix:
      - BUILD: windows
      - BUILD: linux
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:wallet-$BUILD" || true
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg BUILD=$BUILD --build-arg IMG_PREFIX=registry.gitlab.com/lthn.io/projects/sdk --cache-from $CI_REGISTRY_IMAGE:wallet-$BUILD -t $CI_REGISTRY_IMAGE:wallet-$BUILD -f build-conf/wallet/$BUILD.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:wallet-$BUILD"

wallet:deploy:
  stage: deploy
  needs: ["wallet"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  parallel:
    matrix:
      - TARGET: wallet-windows
      - TARGET: wallet-linux
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TARGET
    - docker tag $CI_REGISTRY_IMAGE:$TARGET $DOCKER_REGISTRY/lthn/build:$TARGET
    - docker push $DOCKER_REGISTRY/lthn/build:$TARGET
  environment:
    name: $IMG_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'


sources:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  parallel:
    matrix:
      - BUILD: osx
      - BUILD: linux
      - BUILD: win
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - sleep $(shuf -i1-180 -n1);
  script:
    - docker build --build-arg BUILD=$BUILD -t $CI_REGISTRY_IMAGE:sources-$BUILD -f build-conf/compile/sources.Dockerfile build-src
    - docker push "$CI_REGISTRY_IMAGE:sources-$BUILD"
  rules:
    - changes:
        - build-conf/compile/sources.Dockerfile


sources:deploy:
  stage: deploy
  needs: ["sources"]
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  parallel:
    matrix:
      - TARGET: sources-osx
      - TARGET: sources-linux
      - TARGET: sources-win
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TARGET
    - docker tag $CI_REGISTRY_IMAGE:$TARGET $DOCKER_REGISTRY/lthn/build:$TARGET
    - docker push $DOCKER_REGISTRY/lthn/build:$TARGET
  environment:
    name: $IMG_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      changes:
          - build-conf/compile/sources.Dockerfile